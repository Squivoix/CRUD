/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Users;

import Books.Books;
import Books.Borrows;
import Books.Login;
import Utils.Utils;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Victor Henrique
 */
public class Users extends javax.swing.JFrame {
    
    public Users() {
        initComponents();
        
        ResultSet result = Utils.SelectAllRegistry("users");
        
        try {
            while(result.next()) {
                int id = result.getInt("id");
                String name = result.getString("name");
                String email = result.getString("email");
                String password = result.getString("password");
                String profile = result.getInt("profile") == 1 ? "1 - Client" : "5 - Administrator";
                
                /*if(result.getInt("profile") == 1) {
                    profile = "1 - Client";
                } else {
                    profile = "5 - Administrato";
                }*/
                
                Object[] data = {id, name, email, password, profile};
                
                ((DefaultTableModel)UsersTable.getModel()).addRow(data);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Users.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        PanelHolder = new javax.swing.JPanel();
        TableScrollPanel = new javax.swing.JScrollPane();
        UsersTable = new javax.swing.JTable();
        OperationsToolBar = new javax.swing.JToolBar();
        InsertButton = new javax.swing.JButton();
        ModifyButton = new javax.swing.JButton();
        ModifySingleButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        MenuBar = new javax.swing.JMenuBar();
        WindowMenu = new javax.swing.JMenu();
        BooksMenuItem = new javax.swing.JMenuItem();
        UsersMenuItem = new javax.swing.JMenuItem();
        BorrowsMenuItem = new javax.swing.JMenuItem();
        UserMenu = new javax.swing.JMenu();
        EditMenuItem = new javax.swing.JMenuItem();
        LogOutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        UsersTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        UsersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Email", "Password", "Profile"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        UsersTable.setIntercellSpacing(new java.awt.Dimension(0, 5));
        UsersTable.setRowHeight(30);
        UsersTable.getTableHeader().setReorderingAllowed(false);
        TableScrollPanel.setViewportView(UsersTable);

        OperationsToolBar.setFloatable(false);
        OperationsToolBar.setFocusable(false);

        InsertButton.setText("Insert new user");
        InsertButton.setFocusable(false);
        InsertButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        InsertButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        InsertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertButtonActionPerformed(evt);
            }
        });
        OperationsToolBar.add(InsertButton);

        ModifyButton.setText("Modify user");
        ModifyButton.setToolTipText("Modifies selection");
        ModifyButton.setFocusable(false);
        ModifyButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ModifyButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ModifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifyButtonActionPerformed(evt);
            }
        });
        OperationsToolBar.add(ModifyButton);

        ModifySingleButton.setText("Modify single");
        ModifySingleButton.setFocusable(false);
        ModifySingleButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ModifySingleButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ModifySingleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifySingleButtonActionPerformed(evt);
            }
        });
        OperationsToolBar.add(ModifySingleButton);

        DeleteButton.setText("Delete");
        DeleteButton.setFocusable(false);
        DeleteButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        DeleteButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });
        OperationsToolBar.add(DeleteButton);

        javax.swing.GroupLayout PanelHolderLayout = new javax.swing.GroupLayout(PanelHolder);
        PanelHolder.setLayout(PanelHolderLayout);
        PanelHolderLayout.setHorizontalGroup(
            PanelHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelHolderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TableScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 947, Short.MAX_VALUE)
                    .addComponent(OperationsToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        PanelHolderLayout.setVerticalGroup(
            PanelHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelHolderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(OperationsToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TableScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
                .addContainerGap())
        );

        WindowMenu.setText("Window");

        BooksMenuItem.setText("Books");
        BooksMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BooksMenuItemActionPerformed(evt);
            }
        });
        WindowMenu.add(BooksMenuItem);

        UsersMenuItem.setText("Users");
        WindowMenu.add(UsersMenuItem);

        BorrowsMenuItem.setText("Borrows");
        BorrowsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrowsMenuItemActionPerformed(evt);
            }
        });
        WindowMenu.add(BorrowsMenuItem);

        MenuBar.add(WindowMenu);

        UserMenu.setText("User");

        EditMenuItem.setText("Edit");
        EditMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditMenuItemActionPerformed(evt);
            }
        });
        UserMenu.add(EditMenuItem);

        LogOutMenuItem.setText("Log out");
        LogOutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogOutMenuItemActionPerformed(evt);
            }
        });
        UserMenu.add(LogOutMenuItem);

        MenuBar.add(UserMenu);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelHolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelHolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LogOutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogOutMenuItemActionPerformed
        Utils.OpenNewWindow(new Login(), this);
    }//GEN-LAST:event_LogOutMenuItemActionPerformed

    private void ModifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifyButtonActionPerformed
        int row = UsersTable.getSelectedRow();
        
        if(row == -1) {
            JOptionPane.showMessageDialog(null, "Please select a cell", "No cell selected", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String id = UsersTable.getValueAt(row, 0).toString();
        String name = (String) UsersTable.getValueAt(row, 1);
        String email = (String) UsersTable.getValueAt(row, 2);
        String password = (String) UsersTable.getValueAt(row, 3);
        String profile = UsersTable.getValueAt(row, 4).toString();
        
        String[] data = {id, name, email, password, profile};
          
        Utils.OpenNewWindow(new UpdateUser(data), this);
    }//GEN-LAST:event_ModifyButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        if(UsersTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Please select a cell!", "No cell selected", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        int safe = JOptionPane.showConfirmDialog(null, "Are you sure you want do delete the registry?", "Confirm deletion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        //If clicked yes, delete
        if(safe == 0) {
            int row = UsersTable.getSelectedRow();
            Utils.DeleteRegistry((int)UsersTable.getValueAt(row, 0), "users");
            
            ((DefaultTableModel)UsersTable.getModel()).removeRow(row);
            
            JOptionPane.showMessageDialog(null, "Registry successfully deleted!", "", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void InsertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertButtonActionPerformed
        Utils.OpenNewWindow(new InsertUser(), this);
    }//GEN-LAST:event_InsertButtonActionPerformed

    private void BooksMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BooksMenuItemActionPerformed
        Utils.OpenNewWindow(new Books(), this);
    }//GEN-LAST:event_BooksMenuItemActionPerformed

    private void ModifySingleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifySingleButtonActionPerformed
        int row = UsersTable.getSelectedRow();
        int column = UsersTable.getSelectedColumn();
        String name = UsersTable.getColumnName(column);
        String value;
        int id = Integer.parseInt(UsersTable.getValueAt(row, 0).toString());
        
        if(column == 0) {
            JOptionPane.showMessageDialog(null, "You cannot modify the id column!", "ID column selected", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if(row == -1 || column == -1) {
            JOptionPane.showMessageDialog(null, "Please select a cell!", "No cell selected", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        value = (String) JOptionPane.showInputDialog(null, "Enter the user " + name, "Modify " + name, 1, null, null, UsersTable.getValueAt(row, column));
            
        if(value != null) {
            if(Utils.UpdateSingleRegistry(id, "users", name.toLowerCase(), value)) {
                UsersTable.setValueAt(value, row, column);
                JOptionPane.showMessageDialog(null, "Registry updated successfully!", "", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_ModifySingleButtonActionPerformed

    private void BorrowsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrowsMenuItemActionPerformed
        Utils.OpenNewWindow(new Borrows(), this);
    }//GEN-LAST:event_BorrowsMenuItemActionPerformed

    private void EditMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditMenuItemActionPerformed
        Utils.OpenNewWindow(new ModifyUser(), this);
    }//GEN-LAST:event_EditMenuItemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem BooksMenuItem;
    private javax.swing.JMenuItem BorrowsMenuItem;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JMenuItem EditMenuItem;
    private javax.swing.JButton InsertButton;
    private javax.swing.JMenuItem LogOutMenuItem;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JButton ModifyButton;
    private javax.swing.JButton ModifySingleButton;
    private javax.swing.JToolBar OperationsToolBar;
    private javax.swing.JPanel PanelHolder;
    private javax.swing.JScrollPane TableScrollPanel;
    private javax.swing.JMenu UserMenu;
    private javax.swing.JMenuItem UsersMenuItem;
    private javax.swing.JTable UsersTable;
    private javax.swing.JMenu WindowMenu;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    // End of variables declaration//GEN-END:variables
}
